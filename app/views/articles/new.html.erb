<div id="page-content" class="container-lg mt-4">
  <h1 class="text-center" >Create New Article</h1>
  <% if @article.errors.any? %>
    <h2>The following errors prevented the article from being saved</h2>
    <ul>
      <% @article.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  <% end %>
  <%# using RAILS built in abstraction for forms (...wow!) %>
  <%# the form_with specific abstraction submits its data via AJAX, we can override
  that to get the standard form submit behavior (using local: true flag) - page reload,
  response is an HTML page instead of JSON, and etc %>
  <%#  need to give it the model that the form will be working with as a symbol %>
  <%# articles_path is an abstraction of the path to the articles %>
  <%# using the form builders packaged by RAILS means we also get an "authenticity token"
  field auto generated. This protects the app from recieving form submits from sources
  that is not the official view generated by the app
  %>
  <%# PS: form_with generates the form element in html %>
  <%= form_with scope: :articles, url: articles_path, local: true  do |field| %>
    <div class="mb-3">
      <%= field.label :title, class: "col-sm-2 col-form-label" %>
      <div class="col-sm-10">
        <%= field.text_field :title, class:"form-control", placeholder: "Title" %>
      </div>
    </div>
    <div class="mb-3">
      <%= field.label :description, class: "col-sm-2 col-form-label" %>
      <div class="col-10">
        <%= field.text_area :description, size: "70x5", class:"form-control", placeholder: "Description" %>
      </div>
    </div>
    <div class="mb-3">
      <div class="col-sm-10">
        <%# NOTE field.submit does not use a comma to seperate the class %>
        <%# a comma will cause an error %>
        <%= field.submit class:"btn btn-primary" %>
      </div>
    </div>
  <% end %>
  <%= link_to "Return to Articles Listing", articles_path %> |
</div>
